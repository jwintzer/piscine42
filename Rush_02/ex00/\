/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   transformation.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jwintzer <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/09/18 12:34:32 by jwintzer          #+#    #+#             */
/*   Updated: 2022/09/18 14:35:04 by jwintzer         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>
#include <stdio.h>

void	units(char c, char **left_dict, char **right_dict)
{
	return ;
	int	i;
	int	j;

	i = 0;
	j = 0;
	while (i < 10)
	{
		if (left_dict[i][0] == c)
		{
			while (right_dict[i][j])
				j++;
			write(1, &right_dict[i], j);
		}
		i++;
	}
}

void	elevens(char c, char **left_dict, char **right_dict)
{
	return ;
	int	i;
	int	j;

	i = 10;
	j = 0;
	while (i < 20)
	{
		if (left_dict[i][1] == c)
		{
			while (right_dict[i][j])
				j++;
			write(1, &right_dict[i], j);
		}
		i++;
	}
}

void	tens(char c, char c2, char **left_dict, char **right_dict)
{
	return ;
	int	i;
	int	j;

	i = 21;
	j = 0;
	if (c != '1')
	{
		while (i < 29)
		{
			if (left_dict[i][0] == c)
			{
				while (right_dict[i][j])
					j++;
				write(1, &right_dict[i], j);
			}
			i++;
		}
	}
	else
		elevens(c2, left_dict, right_dict);
}

void	hundreds(char c, char **left_dict, char ** right_dict)
{
	return ;
	int	j;

	j = 0;
	units(c, left_dict, right_dict);
	while (right_dict[29][j])
		j++;
	write(1, &right_dict[29], j);
}

void	transformation(char *str, char **left_dict, char **right_dict)
{
	return ;
	int	i;
	int	size;

	i = 0;
	size = 0;
	while (str[size])
		size++;
	printf("%s", str);
	printf("%d", size);
	while (str[i])
	{
		if (size % 3 == 0)
			if (str[i - 1] != '1')
				units(str[i], left_dict, right_dict);
		if (size % 3 == 1)
			tens(str[i], str[i + 1], left_dict, right_dict);
		if (size % 3 == 2)
			hundreds(str[i], left_dict, right_dict);
		i++;
		size--;
	}
}
